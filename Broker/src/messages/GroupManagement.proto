////////////////////////////////////////////////////////////////////////////////
/// @file         GroupManagement.proto
///
/// @author       Michael Catanzaro <michael.catanzaro@mst.edu>
///
/// @description  Declaration of all group management message types
///
/// These source code files were created at Missouri University of Science and
/// Technology, and are intended for use in teaching or research. They may be
/// freely copied, modified, and redistributed as long as modified versions are
/// clearly marked as such and this notice is not removed. Neither the authors
/// nor Missouri S&T make any warranty, express or implied, nor assume any legal
/// responsibility for the accuracy, completeness, or usefulness of these files
/// or any information distributed with these files.
///
/// Suggested modifications or questions about these files can be directed to
/// Dr. Bruce McMillin, Department of Computer Science, Missouri University of
/// Science and Technology, Rolla, MO 65409 <ff@mst.edu>.
////////////////////////////////////////////////////////////////////////////////

package freedm.broker.gm;

message FidStateMessage {
    required string deviceid = 1;
    required bool state = 2;
}

message AreYouCoordinatorMessage
{
    required uint32 sequence_no = 1;
}

message InviteMessage
{
    required uint32 group_id = 1;
    required string group_leader_uuid = 2;
    required string group_leader_host = 3;
    required string group_leader_port = 4;
}

message AreYouCoordinatorResponseMessage
{
    required string payload = 1;
    required string leader_uuid = 2;
    required string leader_host = 3;
    required string leader_port = 4;
    required uint32 sequence_no = 5;
    repeated FidStateMessage fid_state = 6;
}

message AreYouThereResponseMessage
{
    required string payload = 1;
    required string leader_uuid = 2;
    required string leader_host = 3;
    required string leader_port = 4;
    required uint32 sequence_no = 5;
}

message AcceptMessage
{
    required uint32 group_id = 1;
}

message AreYouThereMessage
{
    required uint32 group_id = 1;
    required uint32 sequence_no = 2;
}

message PeerListQueryMessage
{
    required string requester = 1;
}

message ConnectedPeerMessage
{
    required string uuid = 1;
    required string host = 2;
    required string port = 3;
}

message PeerListMessage
{
    repeated ConnectedPeerMessage connected_peer_message = 1;
}

message GroupManagementMessage
{
    optional AreYouCoordinatorMessage are_you_coordinator_message = 1;
    optional InviteMessage invite_message = 2;
    optional AreYouCoordinatorResponseMessage are_you_coordinator_response_message = 3;
    optional AreYouThereResponseMessage are_you_there_response_message = 4;
    optional AcceptMessage accept_message = 5;
    optional AreYouThereMessage are_you_there_message = 6;
    optional PeerListQueryMessage peer_list_query_message = 7;
    optional PeerListMessage peer_list_message = 8;
}
