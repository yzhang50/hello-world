////////////////////////////////////////////////////////////////////////////////
/// @file         StateCollection.proto
///
/// @author       Michael Catanzaro <michael.catanzaro@mst.edu>
///
/// @description  Declaration of all state collection message types
///
/// These source code files were created at Missouri University of Science and
/// Technology, and are intended for use in teaching or research. They may be
/// freely copied, modified, and redistributed as long as modified versions are
/// clearly marked as such and this notice is not removed. Neither the authors
/// nor Missouri S&T make any warranty, express or implied, nor assume any legal
/// responsibility for the accuracy, completeness, or usefulness of these files
/// or any information distributed with these files.
///
/// Suggested modifications or questions about these files can be directed to
/// Dr. Bruce McMillin, Department of Computer Science, Missouri University of
/// Science and Technology, Rolla, MO 65409 <ff@mst.edu>.
////////////////////////////////////////////////////////////////////////////////

package freedm.broker.sc;

message MarkerMessage
{
    required string source = 1;
    required int32 id = 2;
    repeated string device = 3;
}

message DeviceSignalStateMessage
{
    required string type = 1;
    required string signal = 2;
    required float value = 3;
    required int32 count = 4;
}

message StateMessage
{
    required string source = 1;
    required string marker_uuid = 2;
    required int32 marker_int = 3;
    repeated DeviceSignalStateMessage device_signal_state_message = 4;
}

message DeviceSignalRequestMessage
{
    required string type = 1;
    required string signal = 2;
}

message RequestMessage
{
    required string module = 1;
    repeated DeviceSignalRequestMessage device_signal_request_message = 2;
}

message CollectedStateMessage
{
    repeated double gateway = 1;
    repeated double generation = 2;
    repeated double storage = 3;
    repeated double drain = 4;
    repeated double state = 5;
    required int32 num_intransit_accepts = 6;
}

message StateCollectionMessage
{
    optional MarkerMessage marker_message = 2;
    optional StateMessage state_message = 3;
    optional RequestMessage request_message = 4;
    optional CollectedStateMessage collected_state_message = 5;
}
